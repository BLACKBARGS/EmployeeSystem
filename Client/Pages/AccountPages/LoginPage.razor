@page "/identity/account/login"
@using Client.Pages.OtherPages
@using ClientLibrary.Helpers
@using Syncfusion.Blazor.Popups
@layout AuthenticationLayout
@inject SfDialogService DialogService

<div class="container vh-100">
    <div class="row h-100 justify-content-center align-items-center">
        <div class="col-lg-4">
            <EditForm Model="@User" OnValidSubmit="@HandleLogin">
                <DataAnnotationsValidator />
                <div class="card bg-black" style="opacity:0.85; border-radius:8px; color:white; font-weight:bold;">
                    <div class="card-header text-center fs-4">Login</div>
                    <div class="container">
                        <div class="row justify-content-center">
                            <div class="col-12 d-flex justify-content-center">
                                <img style="border:20px" src="/images/companylogos/blacklogo.jpeg" height="200" width="200" />
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="form-group mb-3">
                            <label class="form-label">Email</label>
                            <InputText @bind-Value="User.Email" class="form-control" />
                        </div>
                        <div class="form-group mb-3">
                            <label class="form-label">Password</label>
                            <InputText @bind-Value="User.Password" type="password" class="form-control" />
                        </div>
                        <div class="form-group mb-3">
                            @if (ShowLoadingButton)
                            {
                                <ButtonLoadingSpinner></ButtonLoadingSpinner>
                            }
                            else
                            {
                                <button class="btn btn-primary float-end" type="submit">Login</button>
                            }
                        </div>
                    </div>
                    <div class="card-footer text-center">
                        Don't have an account? | <a class="btn-link" href="identity/account/register">Sign Up</a>
                        <ValidationSummary />
                    </div>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    public bool ShowLoadingButton { get; set; } = false;
    Login User = new();
    async Task HandleLogin()
    {
        ShowLoadingButton = true;
        var result = await accountService.SignInAsync(User);
        if (result.Flag)
        {
            await DisplayDialog(result.Message, "Login Success");
            var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthStateProvider;
            await customAuthStateProvider.UpdateAuthenticationState(new UserSession()
            { Token = result.Token, RefreshToken = result.RefreshToken });
            NavManager.NavigateTo("/", forceLoad: true);
        }
        else
        {
            await DisplayDialog(result.Message, "Alert");
        }
        ShowLoadingButton = false;
    }
    private async Task DisplayDialog(string content, string title)
    {
        await DialogService.AlertAsync(content, title);
    }
}