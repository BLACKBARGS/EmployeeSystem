@page "/identity/account/register"
@using Client.Pages.OtherPages
@layout AuthenticationLayout

<div class="container vh-100">
    <div class="row h-100 justify-content-center align-items-center">
        <div class="col-lg-4">
            <EditForm Model="User" OnValidSubmit="HandleRegistration">
                <DataAnnotationsValidator />
                <div class="card bg-black" style="opacity:0.95; border-radius:8px; color:white; font-weight:bold;">
                    <div class="card-header text-center fs-4">Register New Account</div>
                    <div class="container">
                        <div class="row justify-content-center">
                            <div class="col-12 d-flex justify-content-center">
                                <img style="border:20px" src="/images/companylogos/blacklogo.png" height="200" width="200" />
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="form-group mb-3">
                            <label for="fullname" class="form-label">Full Name</label>
                            <InputText @bind-Value="User.FullName" id="fullname" class="form-control" />
                        </div>
                        <div class="form-group mb-3">
                            <label for="email" class="form-label">Email</label>
                            <InputText @bind-Value="User.Email" id="email" class="form-control" />
                        </div>
                        <div class="form-group mb-3">
                            <label for="password" class="form-label">Password</label>
                            <InputText @bind-Value="User.Password" id="password" type="password" class="form-control" />
                        </div>
                        <div class="form-group mb-3">
                            <label for="confirmPassword" class="form-label">Confirm Password</label>
                            <InputText @bind-Value="User.ConfirmPassword" id="confirmPassword" type="password" class="form-control" />
                        </div>
                        <div class="form-group mb-3">
                            @if (ShowLoadingButton)
                            {
                                <ButtonLoadingSpinner></ButtonLoadingSpinner>
                            }
                            else
                            {
                                <button class="btn btn-primary float-end" type="submit">Register</button>
                            }
                        </div>
                    </div>
                    <div class="card-footer text-center">
                        Already have an account? | <a class="btn-link" href="identity/account/login">Sign In</a>
                        <ValidationSummary />
                    </div>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    public bool ShowLoadingButton { get; set; } = false;
    Register User = new();
    [CascadingParameter] public Task<AuthenticationState>? AuthenticationState { get; set; }
    protected async override Task OnInitializedAsync()
    {
        await CheckUserAuthentication();
    }

    async Task HandleRegistration()
    {
        ShowLoadingButton = true;
        var result = await accountService.CreateAsync(User);
        if (result.Flag)
        {
            await DisplayDialog(result.Message, "New User");
            User = new();
        }
        else
        {
            await DisplayDialog(result.Message, "Alert");
        }
        ShowLoadingButton = false;
    }

    private async Task DisplayDialog(string content, string title)
    {
        await dialogService.AlertAsync(content, title);
    }

    private async Task CheckUserAuthentication()
    {
        var user = (await AuthenticationState!).User;
        bool isAuthenticated = user.Identity!.IsAuthenticated;
        if (user.Identity!.IsAuthenticated)
            NavManager.NavigateTo("/home/dashboard");
    }
}
